{-# OPTIONS --prop --rewriting --guardedness #-}

module Others where

open import Data.Bool hiding (not) renaming (Bool to ùüö; true to tt; false to ff)
open import Data.Nat using (suc)
open import Data.Sum using (inj‚ÇÅ; inj‚ÇÇ)
open import Data.Product using (_,_)
open import Data.Unit renaming (tt to triv)
open import Relation.Binary.PropositionalEquality using (_‚â°_; refl)

open import Elaborator
open import STLC
open STLC.I

-- A collection of tests that don't really fit anywhere else

-- alpha equivalence

_ : compile-eval "(Œªx.x) : ‚Ñï ‚Üí ‚Ñï" ‚â° compile-eval "(Œªy.y) : ‚Ñï ‚Üí ‚Ñï"
_ = refl

-- unrolling shorthand lambda notation

_ : compile-eval "(Œª x y z. x+y+z) : ‚Ñï ‚Üí ‚Ñï ‚Üí ‚Ñï ‚Üí ‚Ñï" ‚â° compile-eval "(Œª x. Œª y. Œª z. x+y+z) : ‚Ñï ‚Üí ‚Ñï ‚Üí ‚Ñï ‚Üí ‚Ñï"
_ = refl
